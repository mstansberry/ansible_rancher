---
- name: Verify that required vars are defined and populated
  include_role:
    name: mstansberry.ansible_rancher.required_vars
  vars:
    required_vars:
      - admin_username
      - admin_password

- name: Login w/ defined admin credentials
  ansible.builtin.uri:
    url: "{{ rancher_server_api }}-public/localProviders/local?action=login"
    validate_certs: false
    method: POST
    return_content: true
    body_format: json
    body:
      username: "{{ admin_username }}"
      password: "{{ admin_password }}"
    status_code: 201
  check_mode: false  # Run task even when in check_mode
  register: login_output

- name: Verify that login_output includes token value
  ansible.builtin.assert:
    that:
      - login_output.json.token is defined
    fail_msg: Login token could not be retrieved

- name: Create API token
  ansible.builtin.uri:
    url: "{{ rancher_server_api }}/token"
    validate_certs: false
    method: POST
    return_content: true
    headers:
      Authorization: "Bearer {{ login_output.json.token }}"
    body_format: json
    body:
      type: "{{ token_type }}"
      description: "{{ token_description }}"
      ttl: "{{ token_ttl_ms }}"
    status_code: 201
  check_mode: false  # Run task even when in check_mode
  register: api_output

- name: Verify that api_output includes token value
  ansible.builtin.assert:
    that:
      - api_output.json.token is defined
    fail_msg: API token could not be retrieved

- name: Set api_token var
  set_fact:
    api_token: "{{ api_output.json.token }}"
  when: api_output.json.token is defined
